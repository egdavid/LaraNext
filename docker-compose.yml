version: "3"

networks:
    backend:
    frontend:

services:
    redis:
        image: redis:alpine
        container_name: laranext_redis
        command: redis-server --requirepass sOmE_sEcUrE_pAsS
        ports:
            - "7379:6379"
        volumes:
            - ./docker/redis/redis-data:/var/lib/redis
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
        environment:
            - REDIS_REPLICATION_MODE=master
        networks:
            - backend

    nginx:
        image: nginx:stable-alpine
        container_name: laranext_nginx
        ports:
            - "8080:80"
        volumes:
            - ./backend:/var/www/html
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            - postgres
        networks:
            - backend

    postgres:
        image: postgres:latest
        container_name: laranext_postgres
        restart: unless-stopped
        tty: true
        ports:
            - "6543:5432"
        environment:
            POSTGRES_DATABASE: laranext
            POSTGRES_USER: laranext
            POSTGRES_PASSWORD: secret
            POSTGRES_ROOT_PASSWORD: secret
            SERVICE_TAGS: dev
            SERVICE_NAME: postgres
        networks:
            - backend
        volumes:
            - ./docker/pgsql:/var/lib/pgsql

    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: laranext_php
        volumes:
            - ./backend:/var/www/html
            - ./docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        ports:
            - "9001:9000"
        networks:
            - backend

    memcached:
        image: bitnami/memcached
        container_name: laranext_memcached
        ports:
            - "11212:11211"
        restart: always

    composer:
        image: composer:latest
        container_name: laranext_composer
        volumes:
            - ./backend:/var/www/html
        working_dir: /var/www/html
        depends_on:
            - php
        networks:
            - backend

    artisan:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: laranext_artisan
        volumes:
            - ./backend:/var/www/html
        depends_on:
            - postgres
        working_dir: /var/www/html
        entrypoint: ["php", "/var/www/html/artisan"]
        networks:
            - backend

    npm:
        image: node:latest
        container_name: laranext_npm
        volumes:
            - ./frontend:/usr/src/app
        working_dir: /usr/src/app
        entrypoint: ["npm"]

    nextjs:
        ports:
            - 3001:3000
        build:
            context: frontend
            dockerfile: Dockerfile
        container_name: laranext_nextjs
        volumes:
            - ./frontend:/usr/src/app
            - /usr/src/app/node_modules
            - /usr/src/app/.next
        env_file:
            - .env
        networks:
            - frontend
